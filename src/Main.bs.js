// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Parser = require("./Parser.bs.js");
var Process = require("process");

var fileNames = Process.argv.slice(2);

console.log(fileNames);

var sf = Parser.parse("./types.d.ts", "interface Process {\n      argv: string[];\n      test: any;\n  }");

function printAst(ast, level) {
  var prefix = " ".repeat(level);
  console.log("LEVEL: " + level);
  switch (ast.TAG | 0) {
    case /* Identifier */4 :
        console.log("Ident");
        console.log(ast._0.escapedText);
        return ;
    case /* InterfaceDeclaration */6 :
        var id = ast._0;
        printAst(id.name, level + 1 | 0);
        id.members.forEach(function (i) {
              return printAst(i, level + 1 | 0);
            });
        return ;
    case /* PropertySignature */7 :
        console.log("P");
        console.log(ast._0.type_);
        return ;
    case /* SourceFile */11 :
        var sourceFile = ast._0;
        console.log(prefix + sourceFile.fileName);
        sourceFile.statements.forEach(function (st) {
              return printAst(st, level + 1 | 0);
            });
        return ;
    default:
      console.log("dd");
      return ;
  }
}

printAst(sf, 0);

console.log("RX");

exports.fileNames = fileNames;
exports.sf = sf;
exports.printAst = printAst;
/* fileNames Not a pure module */
